setup()
{
    /* Register Protection Disable Sequence */
    __message "Disable register write protection";
    __writeMemory32(0x00000059, 0x40000100, "Memory");
    __writeMemory32(0x00000016, 0x40000100, "Memory");
    __writeMemory32(0x00000088, 0x40000100, "Memory");
    
    /* Disable WDT */
    __writeMemory32(__readMemory32(0x40040000, "Memory") & ~(0x80000080), 0x40040000, "Memory");
    __var reg;
    reg = __readMemory32(0x40040000, "Memory");
    if(reg & 0x00000080)
    {
        /* Set max timeout period and reset counter */
        __writeMemory32(reg | 0x00000701, 0x40040000, "Memory");
    }
    
    /* Switch to LDROM Boot Mode */
    __message "Change boot mode to LDROM to write APROM";
    __writeMemory32(__readMemory32(0x4000C000, "Memory") | (1<<1), 0x4000C000, "Memory");
    
    /* System Reset */
    __hwResetWithStrategy(0, 0);
    
    /* Register Protection Disable Sequence */
    __message "Disable register write protection";
    __writeMemory32(0x00000059, 0x40000100, "Memory");
    __writeMemory32(0x00000016, 0x40000100, "Memory");
    __writeMemory32(0x00000088, 0x40000100, "Memory");
}

exit()
{
    /* HW Reset */
    /* __hwReset(0); */
    
    /* Register Protection Disable Sequence */
    __message "Disable register write protection";
    __writeMemory32(0x00000059, 0x40000100, "Memory");
    __writeMemory32(0x00000016, 0x40000100, "Memory");
    __writeMemory32(0x00000088, 0x40000100, "Memory");
    
    /* Switch Back to APROM Boot Mode */
    __message "Change boot mode to APROM";
    __writeMemory32(__readMemory32(0x4000C000, "Memory") & ~(1<<1), 0x4000C000, "Memory");
    
    /* System Reset */
    __hwResetWithStrategy(0, 0);
}

execUserFlashInit()
{
    setup();
}

execUserReset()
{
    exit();
}

execUserFlashExit()
{
    exit();
}
